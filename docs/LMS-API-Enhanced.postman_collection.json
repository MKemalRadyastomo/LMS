{
  "info": {
    "_postman_id": "f646348a-7538-42a4-8896-72b232ff96d2",
    "name": "LMS API Enhanced - Complete Backend",
    "description": "Comprehensive API collection for the enhanced Online Learning Platform with RBAC, advanced assignments, grading, analytics, search, and security features.\n\n## Authentication Setup\n1. Run any of the Login requests in the 'Authentication & Security' folder\n2. The JWT token will be automatically stored in environment variables\n3. All subsequent requests will use this token automatically\n\n## Default Test Accounts (Development)\n- Admin: admin@lms.edu / password123\n- Teacher: john.smith@lms.edu / password123\n- Student: alice.wilson@student.lms.edu / password123",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "45324042"
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global pre-request script",
          "// Check if token is expired",
          "const tokenExpiresAt = pm.environment.get('tokenExpiresAt');",
          "if (tokenExpiresAt) {",
          "    const expirationTime = new Date(tokenExpiresAt);",
          "    const currentTime = new Date();",
          "    if (currentTime > expirationTime) {",
          "        console.warn('Authentication token has expired. Please re-login.');",
          "    }",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test script for authentication error handling",
          "if (pm.response.code === 401) {",
          "    console.error('Authentication failed. Token may be expired or invalid.');",
          "    console.log('Current user:', pm.environment.get('currentUserEmail'));",
          "    console.log('Token expires at:', pm.environment.get('tokenExpiresAt'));",
          "}"
        ]
      }
    }
  ],
  "item": [
    {
      "name": "\ud83d\udd10 Authentication & Security",
      "item": [
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();",
                  "if (pm.response.code === 200) {",
                  "    pm.environment.set('authToken', responseJson.token);",
                  "    pm.environment.set('userId', responseJson.user.id);",
                  "    pm.environment.set('userRole', responseJson.user.role);",
                  "    pm.environment.set('currentUserEmail', responseJson.user.email);",
                  "    pm.environment.set('currentUserRole', responseJson.user.role);",
                  "    // Calculate token expiration time",
                  "    const expiresIn = responseJson.expiresIn || '30m';",
                  "    const expirationTime = new Date(Date.now() + (30 * 60 * 1000)).toISOString();",
                  "    pm.environment.set('tokenExpiresAt', expirationTime);",
                  "    console.log('Authentication successful');",
                  "    console.log('User:', responseJson.user.email);",
                  "    console.log('Role:', responseJson.user.role);",
                  "    console.log('Token expires at:', expirationTime);",
                  "} else {",
                  "    console.log('Login failed:', responseJson.message);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@lms.edu\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "login"
              ]
            },
            "description": "Login with email and password. Returns JWT token and user info."
          }
        },
        {
          "name": "Login as Teacher",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();",
                  "if (pm.response.code === 200) {",
                  "    pm.environment.set('teacherToken', responseJson.token);",
                  "    pm.environment.set('teacherId', responseJson.user.id);",
                  "    pm.environment.set('authToken', responseJson.token);",
                  "    pm.environment.set('userId', responseJson.user.id);",
                  "    pm.environment.set('userRole', responseJson.user.role);",
                  "    pm.environment.set('currentUserEmail', responseJson.user.email);",
                  "    pm.environment.set('currentUserRole', responseJson.user.role);",
                  "    const expirationTime = new Date(Date.now() + (30 * 60 * 1000)).toISOString();",
                  "    pm.environment.set('tokenExpiresAt', expirationTime);",
                  "    console.log('Teacher login successful');",
                  "    console.log('User:', responseJson.user.email);",
                  "    console.log('Role:', responseJson.user.role);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.smith@lms.edu\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "login"
              ]
            },
            "description": "Login as teacher for testing teacher-specific endpoints"
          }
        },
        {
          "name": "Login as Student",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();",
                  "if (pm.response.code === 200) {",
                  "    pm.environment.set('studentToken', responseJson.token);",
                  "    pm.environment.set('studentId', responseJson.user.id);",
                  "    pm.environment.set('authToken', responseJson.token);",
                  "    pm.environment.set('userId', responseJson.user.id);",
                  "    pm.environment.set('userRole', responseJson.user.role);",
                  "    pm.environment.set('currentUserEmail', responseJson.user.email);",
                  "    pm.environment.set('currentUserRole', responseJson.user.role);",
                  "    const expirationTime = new Date(Date.now() + (30 * 60 * 1000)).toISOString();",
                  "    pm.environment.set('tokenExpiresAt', expirationTime);",
                  "    console.log('Student login successful');",
                  "    console.log('User:', responseJson.user.email);",
                  "    console.log('Role:', responseJson.user.role);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"alice.wilson@student.lms.edu\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "login"
              ]
            },
            "description": "Login as student for testing student-specific endpoints"
          }
        },
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/me",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "me"
              ]
            },
            "description": "Get current authenticated user info"
          }
        },
        {
          "name": "Change Password",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"currentPassword\": \"oldpassword\",\n  \"newPassword\": \"newpassword123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/change-password",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "change-password"
              ]
            },
            "description": "Change user password"
          }
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/logout",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "logout"
              ]
            },
            "description": "Logout and invalidate session"
          }
        },
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "register"
              ]
            },
            "description": "Register a new user account - Admin access only",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"newuser@example.com\",\n  \"password\": \"password123\",\n  \"full_name\": \"New User\",\n  \"role\": \"siswa\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();",
                  "if (pm.response.code === 201) {",
                  "    console.log('User registered successfully:', responseJson.user.email);",
                  "} else {",
                  "    console.log('Registration failed:', responseJson.message);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/refresh",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "refresh"
              ]
            },
            "description": "Refresh JWT token using existing token"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();",
                  "if (pm.response.code === 200) {",
                  "    pm.environment.set('authToken', responseJson.token);",
                  "    console.log('Token refreshed successfully');",
                  "} else {",
                  "    console.log('Token refresh failed:', responseJson.message);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ],
      "description": "Authentication, security, and session management endpoints"
    },
    {
      "name": "\ud83d\udc65 User Management",
      "item": [
        {
          "name": "Create User (Admin)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"newuser@example.com\",\n  \"password\": \"password123\",\n  \"name\": \"New User\",\n  \"role\": \"siswa\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "users"
              ]
            },
            "description": "Create new user (Admin only). Roles: admin, guru, siswa"
          }
        },
        {
          "name": "List Users",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users?page=1&limit=20&role=siswa&search=john",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "users"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                },
                {
                  "key": "role",
                  "value": "siswa"
                },
                {
                  "key": "search",
                  "value": "john"
                }
              ]
            },
            "description": "List users with pagination and filtering"
          }
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "users",
                "{{userId}}"
              ]
            },
            "description": "Get user details by ID"
          }
        },
        {
          "name": "Update User",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Name\",\n  \"email\": \"updated@example.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "users",
                "{{userId}}"
              ]
            },
            "description": "Update user information"
          }
        },
        {
          "name": "Upload Profile Picture",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "profileImage",
                  "type": "file",
                  "src": []
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}/profile-image",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "users",
                "{{userId}}",
                "profile-image"
              ]
            },
            "description": "Upload profile picture (max 2MB, jpg/png only)"
          }
        },
        {
          "name": "Get User Statistics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}/statistics",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "users",
                "{{userId}}",
                "statistics"
              ]
            },
            "description": "Get user activity statistics and progress"
          }
        },
        {
          "name": "Delete User",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "users",
                "{{userId}}"
              ]
            },
            "description": "Delete a user account - Admin access only"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('User deleted successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Change User Password",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}/password",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "users",
                "{{userId}}",
                "password"
              ]
            },
            "description": "Change user password",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"currentPassword\": \"oldpassword\",\n  \"newPassword\": \"newpassword123\"\n}"
            }
          }
        },
        {
          "name": "Get User Statistics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}/stats",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "users",
                "{{userId}}",
                "stats"
              ]
            },
            "description": "Get detailed user statistics and analytics"
          }
        }
      ],
      "description": "User management and profile endpoints"
    },
    {
      "name": "\ud83d\udcda Course Management",
      "item": [
        {
          "name": "Create Course",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();",
                  "if (pm.response.code === 201) {",
                  "    pm.environment.set('courseId', responseJson.data.id);",
                  "    pm.environment.set('courseCode', responseJson.data.code);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Advanced Mathematics\",\n  \"description\": \"Advanced mathematics course covering calculus and statistics\",\n  \"privacy\": \"public\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/courses",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "courses"
              ]
            },
            "description": "Create new course (Admin/Teacher only)"
          }
        },
        {
          "name": "List Courses",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/courses?page=1&limit=10&search=math&teacherId={{teacherId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "courses"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "search",
                  "value": "math"
                },
                {
                  "key": "teacherId",
                  "value": "{{teacherId}}"
                }
              ]
            },
            "description": "List courses with pagination and filters"
          }
        },
        {
          "name": "Get Course Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/courses/{{courseId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "courses",
                "{{courseId}}"
              ]
            },
            "description": "Get detailed course information"
          }
        },
        {
          "name": "Update Course",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Advanced Mathematics - Updated\",\n  \"description\": \"Updated course description\",\n  \"privacy\": \"private\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/courses/{{courseId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "courses",
                "{{courseId}}"
              ]
            },
            "description": "Update course details"
          }
        },
        {
          "name": "Generate Course Enrollment Code",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();",
                  "if (pm.response.code === 200) {",
                  "    pm.environment.set('enrollmentCode', responseJson.data.code);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"expiresAt\": \"2025-12-31T23:59:59Z\",\n  \"maxEnrollments\": 100\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/courses/{{courseId}}/enrollment-code",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "courses",
                "{{courseId}}",
                "enrollment-code"
              ]
            },
            "description": "Generate enrollment code for students to join course"
          }
        },
        {
          "name": "Get Course Analytics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/courses/{{courseId}}/analytics",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "courses",
                "{{courseId}}",
                "analytics"
              ]
            },
            "description": "Get course analytics and statistics"
          }
        },
        {
          "name": "Course Search Suggestions",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/courses/search/suggestions",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "courses",
                "search",
                "suggestions"
              ]
            },
            "description": "Get course search suggestions with autocomplete"
          }
        },
        {
          "name": "Advanced Course Filter",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/courses/search/advanced",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "courses",
                "search",
                "advanced"
              ]
            },
            "description": "Advanced course filtering with multiple criteria"
          }
        },
        {
          "name": "Find Course by Code",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/courses/code/{{courseCode}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "courses",
                "code",
                "{{courseCode}}"
              ]
            },
            "description": "Find course by class code"
          }
        },
        {
          "name": "Bulk Enroll Students",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/courses/{{courseId}}/enrollments/bulk",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "courses",
                "{{courseId}}",
                "enrollments",
                "bulk"
              ]
            },
            "description": "Bulk enroll multiple students - Guru/Admin access only",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"studentEmails\": [\"student1@example.com\", \"student2@example.com\"],\n  \"enrollmentStatus\": \"active\"\n}"
            }
          }
        },
        {
          "name": "Bulk Update Enrollment Status",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/courses/{{courseId}}/enrollments/bulk-status",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "courses",
                "{{courseId}}",
                "enrollments",
                "bulk-status"
              ]
            },
            "description": "Update enrollment status for multiple students - Guru/Admin access only",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"enrollmentIds\": [1, 2, 3],\n  \"status\": \"inactive\"\n}"
            }
          }
        },
        {
          "name": "Get Enrollment Analytics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/courses/{{courseId}}/enrollments/analytics",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "courses",
                "{{courseId}}",
                "enrollments",
                "analytics"
              ]
            },
            "description": "Get course enrollment analytics - Guru/Admin access only"
          }
        },
        {
          "name": "Add Content to Course",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/courses/{{courseId}}/content",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "courses",
                "{{courseId}}",
                "content"
              ]
            },
            "description": "Add content to course - Guru/Admin access only",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Course Introduction\",\n  \"type\": \"material\",\n  \"content\": \"Welcome to the course\",\n  \"order\": 1\n}"
            }
          }
        },
        {
          "name": "Get Course Content",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/courses/{{courseId}}/content",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "courses",
                "{{courseId}}",
                "content"
              ]
            },
            "description": "Get all content for a course"
          }
        },
        {
          "name": "Get Specific Content",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/courses/{{courseId}}/content/{{contentId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "courses",
                "{{courseId}}",
                "content",
                "{{contentId}}"
              ]
            },
            "description": "Get specific content by ID"
          }
        },
        {
          "name": "Update Content Order",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/courses/{{courseId}}/content/order",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "courses",
                "{{courseId}}",
                "content",
                "order"
              ]
            },
            "description": "Update content order - Guru/Admin access only",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"contentOrders\": [{\"id\": 1, \"order\": 2}, {\"id\": 2, \"order\": 1}]\n}"
            }
          }
        },
        {
          "name": "Get Course Statistics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/courses/{{courseId}}/statistics",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "courses",
                "{{courseId}}",
                "statistics"
              ]
            },
            "description": "Get detailed course statistics - Guru/Admin access only"
          }
        },
        {
          "name": "Get Course Activities",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/courses/{{courseId}}/activities",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "courses",
                "{{courseId}}",
                "activities"
              ]
            },
            "description": "Get course activity log - Guru/Admin access only"
          }
        },
        {
          "name": "Get Activity Summary",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/courses/{{courseId}}/activities/summary",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "courses",
                "{{courseId}}",
                "activities",
                "summary"
              ]
            },
            "description": "Get course activity summary - Guru/Admin access only"
          }
        }
      ],
      "description": "Course creation, management, and analytics"
    },
    {
      "name": "\ud83d\udcc4 Materials Management",
      "item": [
        {
          "name": "Create Material with Rich Text",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();",
                  "if (pm.response.code === 201) {",
                  "    pm.environment.set('materialId', responseJson.data.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Introduction to Calculus\",\n  \"description\": \"Basic concepts of calculus\",\n  \"content\": \"<h1>Calculus Basics</h1><p>This material covers the fundamental concepts of calculus including limits, derivatives, and integrals.</p>\",\n  \"videoUrl\": \"https://www.youtube.com/watch?v=example\",\n  \"publishDate\": \"2025-01-15T10:00:00Z\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/courses/{{courseId}}/materials",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "courses",
                "{{courseId}}",
                "materials"
              ]
            },
            "description": "Create material with rich text content and video URL"
          }
        },
        {
          "name": "Upload Material with File",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "title",
                  "value": "Lecture Notes PDF",
                  "type": "text"
                },
                {
                  "key": "description",
                  "value": "Comprehensive lecture notes",
                  "type": "text"
                },
                {
                  "key": "content",
                  "value": "<p>Additional notes and explanations</p>",
                  "type": "text"
                },
                {
                  "key": "file",
                  "type": "file",
                  "src": []
                },
                {
                  "key": "publishDate",
                  "value": "2025-01-15T10:00:00Z",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/courses/{{courseId}}/materials",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "courses",
                "{{courseId}}",
                "materials"
              ]
            },
            "description": "Upload material with file attachment (PDF/DOC/PPT up to 50MB)"
          }
        },
        {
          "name": "List Course Materials",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/courses/{{courseId}}/materials?page=1&limit=20",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "courses",
                "{{courseId}}",
                "materials"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            },
            "description": "List all materials for a course"
          }
        },
        {
          "name": "Get Material Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/materials/{{materialId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "materials",
                "{{materialId}}"
              ]
            },
            "description": "Get detailed material information"
          }
        },
        {
          "name": "Update Material",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated Material Title\",\n  \"description\": \"Updated description\",\n  \"content\": \"<h1>Updated Content</h1><p>Updated rich text content</p>\",\n  \"videoUrl\": \"https://www.youtube.com/watch?v=updated\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/materials/{{materialId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "materials",
                "{{materialId}}"
              ]
            },
            "description": "Update material content and metadata"
          }
        },
        {
          "name": "Delete Material",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/materials/{{materialId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "materials",
                "{{materialId}}"
              ]
            },
            "description": "Delete material and associated files"
          }
        },
        {
          "name": "Get Recent Materials",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/courses/{{courseId}}/materials/recent",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "courses",
                "{{courseId}}",
                "materials",
                "recent"
              ]
            },
            "description": "Get recently added materials"
          }
        },
        {
          "name": "Get Materials by Type",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/courses/{{courseId}}/materials/type/{{fileType}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "courses",
                "{{courseId}}",
                "materials",
                "type",
                "{{fileType}}"
              ]
            },
            "description": "Get materials filtered by file type"
          }
        },
        {
          "name": "Get Material Statistics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/courses/{{courseId}}/materials/statistics",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "courses",
                "{{courseId}}",
                "materials",
                "statistics"
              ]
            },
            "description": "Get course material statistics - Guru/Admin access only"
          }
        },
        {
          "name": "Get Material Analytics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/materials/{{materialId}}/analytics",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "materials",
                "{{materialId}}",
                "analytics"
              ]
            },
            "description": "Get material usage analytics - Guru/Admin access only"
          }
        },
        {
          "name": "Search Materials",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/materials/search",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "materials",
                "search"
              ]
            },
            "description": "Search through materials"
          }
        }
      ],
      "description": "Material creation, file uploads, and content management"
    },
    {
      "name": "\ud83d\udcdd Advanced Assignments",
      "item": [
        {
          "name": "Create Essay Assignment",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();",
                  "if (pm.response.code === 201) {",
                  "    pm.environment.set('essayAssignmentId', responseJson.data.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Essay on Calculus Applications\",\n  \"description\": \"Write a 1000-word essay on real-world applications of calculus\",\n  \"type\": \"essay\",\n  \"dueDate\": \"2025-02-15T23:59:59Z\",\n  \"maxScore\": 100,\n  \"instructions\": \"<p>Write a comprehensive essay discussing at least 3 real-world applications of calculus. Include examples and explain the mathematical concepts involved.</p>\",\n  \"wordLimit\": 1000,\n  \"rubricId\": null\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/courses/{{courseId}}/assignments",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "courses",
                "{{courseId}}",
                "assignments"
              ]
            },
            "description": "Create essay-type assignment with word limits"
          }
        },
        {
          "name": "Create Quiz Assignment",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();",
                  "if (pm.response.code === 201) {",
                  "    pm.environment.set('quizAssignmentId', responseJson.data.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Calculus Quiz 1\",\n  \"description\": \"Quiz covering limits and derivatives\",\n  \"type\": \"quiz\",\n  \"dueDate\": \"2025-02-10T23:59:59Z\",\n  \"maxScore\": 50,\n  \"timeLimit\": 60,\n  \"questions\": [\n    {\n      \"type\": \"multiple_choice\",\n      \"question\": \"What is the derivative of x\u00b2?\",\n      \"options\": [\"2x\", \"x\", \"2\", \"x\u00b2\"],\n      \"correctAnswer\": \"2x\",\n      \"points\": 10,\n      \"explanation\": \"Using the power rule: d/dx(x\u00b2) = 2x\"\n    },\n    {\n      \"type\": \"true_false\",\n      \"question\": \"The limit of (x\u00b2-1)/(x-1) as x approaches 1 is 2\",\n      \"correctAnswer\": \"true\",\n      \"points\": 10,\n      \"explanation\": \"Factoring gives (x+1)(x-1)/(x-1) = x+1, so limit is 2\"\n    },\n    {\n      \"type\": \"short_answer\",\n      \"question\": \"Find the derivative of sin(x)\",\n      \"correctAnswer\": \"cos(x)\",\n      \"points\": 15,\n      \"explanation\": \"The derivative of sin(x) is cos(x)\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/courses/{{courseId}}/assignments",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "courses",
                "{{courseId}}",
                "assignments"
              ]
            },
            "description": "Create quiz with multiple question types"
          }
        },
        {
          "name": "Create File Upload Assignment",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();",
                  "if (pm.response.code === 201) {",
                  "    pm.environment.set('fileAssignmentId', responseJson.data.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Mathematics Project Report\",\n  \"description\": \"Submit your research project as a PDF document\",\n  \"type\": \"file_upload\",\n  \"dueDate\": \"2025-02-20T23:59:59Z\",\n  \"maxScore\": 100,\n  \"allowedFileTypes\": [\"pdf\", \"doc\", \"docx\"],\n  \"maxFileSizeMB\": 10,\n  \"instructions\": \"<p>Submit your completed project report. The file should be in PDF format and not exceed 10MB.</p>\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/courses/{{courseId}}/assignments",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "courses",
                "{{courseId}}",
                "assignments"
              ]
            },
            "description": "Create file upload assignment with restrictions"
          }
        },
        {
          "name": "List Course Assignments",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/courses/{{courseId}}/assignments?type=quiz&status=active",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "courses",
                "{{courseId}}",
                "assignments"
              ],
              "query": [
                {
                  "key": "type",
                  "value": "quiz"
                },
                {
                  "key": "status",
                  "value": "active"
                }
              ]
            },
            "description": "List assignments with filtering by type and status"
          }
        },
        {
          "name": "Get Assignment Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/assignments/{{quizAssignmentId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "assignments",
                "{{quizAssignmentId}}"
              ]
            },
            "description": "Get detailed assignment information including questions"
          }
        },
        {
          "name": "Update Assignment",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated Quiz Title\",\n  \"description\": \"Updated description\",\n  \"dueDate\": \"2025-02-12T23:59:59Z\",\n  \"maxScore\": 60\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/assignments/{{quizAssignmentId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "assignments",
                "{{quizAssignmentId}}"
              ]
            },
            "description": "Update assignment details"
          }
        },
        {
          "name": "Delete Assignment",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/courses/{{courseId}}/assignments/{{essayAssignmentId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "courses",
                "{{courseId}}",
                "assignments",
                "{{essayAssignmentId}}"
              ]
            },
            "description": "Delete assignment - Guru/Admin access only"
          }
        },
        {
          "name": "Get Assignment Analytics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/courses/{{courseId}}/assignments/{{essayAssignmentId}}/analytics",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "courses",
                "{{courseId}}",
                "assignments",
                "{{essayAssignmentId}}",
                "analytics"
              ]
            },
            "description": "Get basic assignment analytics - Guru/Admin access only"
          }
        },
        {
          "name": "Get Comprehensive Analytics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/courses/{{courseId}}/assignments/{{essayAssignmentId}}/analytics/comprehensive",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "courses",
                "{{courseId}}",
                "assignments",
                "{{essayAssignmentId}}",
                "analytics",
                "comprehensive"
              ]
            },
            "description": "Get comprehensive assignment analytics - Guru/Admin access only"
          }
        },
        {
          "name": "Duplicate Assignment",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/courses/{{courseId}}/assignments/{{essayAssignmentId}}/duplicate",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "courses",
                "{{courseId}}",
                "assignments",
                "{{essayAssignmentId}}",
                "duplicate"
              ]
            },
            "description": "Create duplicate of assignment - Guru/Admin access only",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"newTitle\": \"Copy of Assignment\",\n  \"newDueDate\": \"2024-03-01T23:59:59Z\"\n}"
            }
          }
        },
        {
          "name": "Update Assignment Analytics",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/courses/{{courseId}}/assignments/{{essayAssignmentId}}/analytics/update",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "courses",
                "{{courseId}}",
                "assignments",
                "{{essayAssignmentId}}",
                "analytics",
                "update"
              ]
            },
            "description": "Update assignment analytics - Guru/Admin access only"
          }
        }
      ],
      "description": "Advanced assignment types: essays, quizzes, and file uploads"
    },
    {
      "name": "\u270d\ufe0f Student Submissions",
      "item": [
        {
          "name": "Submit Essay",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();",
                  "if (pm.response.code === 201) {",
                  "    pm.environment.set('essaySubmissionId', responseJson.data.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{studentToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"submissionText\": \"<h1>Real-World Applications of Calculus</h1><p>Calculus is fundamental to many real-world applications...</p><p>This essay will explore three major applications: physics, engineering, and economics.</p>\",\n  \"wordCount\": 950,\n  \"draft\": false\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/assignments/{{essayAssignmentId}}/submit",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "assignments",
                "{{essayAssignmentId}}",
                "submit"
              ]
            },
            "description": "Submit essay assignment with rich text content"
          }
        },
        {
          "name": "Submit Quiz",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();",
                  "if (pm.response.code === 201) {",
                  "    pm.environment.set('quizSubmissionId', responseJson.data.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{studentToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"quizAnswers\": {\n    \"1\": \"2x\",\n    \"2\": \"true\",\n    \"3\": \"cos(x)\"\n  },\n  \"timeSpent\": 45,\n  \"completedAt\": \"2025-01-12T10:30:00Z\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/assignments/{{quizAssignmentId}}/submit",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "assignments",
                "{{quizAssignmentId}}",
                "submit"
              ]
            },
            "description": "Submit quiz answers with timing information"
          }
        },
        {
          "name": "Submit File Upload",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();",
                  "if (pm.response.code === 201) {",
                  "    pm.environment.set('fileSubmissionId', responseJson.data.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{studentToken}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "src": []
                },
                {
                  "key": "description",
                  "value": "Mathematics project report on calculus applications",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/assignments/{{fileAssignmentId}}/submit",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "assignments",
                "{{fileAssignmentId}}",
                "submit"
              ]
            },
            "description": "Submit file upload assignment"
          }
        },
        {
          "name": "Save Draft Submission",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{studentToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"submissionText\": \"<p>Draft content for my essay...</p>\",\n  \"draft\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/assignments/{{essayAssignmentId}}/submit",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "assignments",
                "{{essayAssignmentId}}",
                "submit"
              ]
            },
            "description": "Save submission as draft for later completion"
          }
        },
        {
          "name": "Get My Submissions",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{studentToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/{{studentId}}/submissions?status=submitted&courseId={{courseId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "users",
                "{{studentId}}",
                "submissions"
              ],
              "query": [
                {
                  "key": "status",
                  "value": "submitted"
                },
                {
                  "key": "courseId",
                  "value": "{{courseId}}"
                }
              ]
            },
            "description": "Get student's own submissions"
          }
        },
        {
          "name": "Get Assignment Submissions (Teacher)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{teacherToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/assignments/{{quizAssignmentId}}/submissions?status=submitted&page=1&limit=20",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "assignments",
                "{{quizAssignmentId}}",
                "submissions"
              ],
              "query": [
                {
                  "key": "status",
                  "value": "submitted"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            },
            "description": "Get all submissions for an assignment (Teacher/Admin only)"
          }
        },
        {
          "name": "Enhanced Submit Assignment",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/assignments/{{essayAssignmentId}}/submit/enhanced",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "assignments",
                "{{essayAssignmentId}}",
                "submit",
                "enhanced"
              ]
            },
            "description": "Enhanced submission with version tracking - Siswa access only",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"content\": \"My enhanced essay submission\",\n  \"version\": \"v2.0\",\n  \"metadata\": {\n    \"wordCount\": 850,\n    \"timeSpent\": 3600\n  }\n}"
            }
          }
        },
        {
          "name": "Auto-save Draft",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/assignments/{{essayAssignmentId}}/autosave",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "assignments",
                "{{essayAssignmentId}}",
                "autosave"
              ]
            },
            "description": "Auto-save submission draft - Siswa access only",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"content\": \"Draft content being saved\",\n  \"isDraft\": true\n}"
            }
          }
        },
        {
          "name": "Submit Final Version",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/assignments/{{essayAssignmentId}}/submissions/{{essaySubmissionId}}/submit",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "assignments",
                "{{essayAssignmentId}}",
                "submissions",
                "{{essaySubmissionId}}",
                "submit"
              ]
            },
            "description": "Submit final version - Siswa access only"
          }
        },
        {
          "name": "Get Submission Versions",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/assignments/{{essayAssignmentId}}/submissions/{{essaySubmissionId}}/versions",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "assignments",
                "{{essayAssignmentId}}",
                "submissions",
                "{{essaySubmissionId}}",
                "versions"
              ]
            },
            "description": "Get all submission versions"
          }
        },
        {
          "name": "Get Latest Submission",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/assignments/{{essayAssignmentId}}/submission/latest",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "assignments",
                "{{essayAssignmentId}}",
                "submission",
                "latest"
              ]
            },
            "description": "Get latest submission version"
          }
        },
        {
          "name": "Get Submission Files",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/assignments/{{essayAssignmentId}}/submissions/{{essaySubmissionId}}/files",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "assignments",
                "{{essayAssignmentId}}",
                "submissions",
                "{{essaySubmissionId}}",
                "files"
              ]
            },
            "description": "Get submission attached files"
          }
        },
        {
          "name": "Delete Submission File",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/assignments/{{essayAssignmentId}}/files/{{fileId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "assignments",
                "{{essayAssignmentId}}",
                "files",
                "{{fileId}}"
              ]
            },
            "description": "Delete submission file - Siswa access only"
          }
        },
        {
          "name": "Grade with Detailed Rubric",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/assignments/{{essayAssignmentId}}/submissions/{{essaySubmissionId}}/grade/detailed",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "assignments",
                "{{essayAssignmentId}}",
                "submissions",
                "{{essaySubmissionId}}",
                "grade",
                "detailed"
              ]
            },
            "description": "Grade with detailed rubric - Guru access only",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"overallGrade\": 85,\n  \"rubricScores\": {\n    \"content\": 90,\n    \"grammar\": 80,\n    \"structure\": 85\n  },\n  \"feedback\": \"Good work overall\"\n}"
            }
          }
        },
        {
          "name": "Apply Automated Grading",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/assignments/{{essayAssignmentId}}/submissions/{{essaySubmissionId}}/grade/auto",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "assignments",
                "{{essayAssignmentId}}",
                "submissions",
                "{{essaySubmissionId}}",
                "grade",
                "auto"
              ]
            },
            "description": "Apply automated grading - Guru access only"
          }
        },
        {
          "name": "Get Plagiarism Report",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/assignments/{{essayAssignmentId}}/submissions/{{essaySubmissionId}}/plagiarism",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "assignments",
                "{{essayAssignmentId}}",
                "submissions",
                "{{essaySubmissionId}}",
                "plagiarism"
              ]
            },
            "description": "Get plagiarism check report - Guru access only"
          }
        },
        {
          "name": "Get Student Analytics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/assignments/{{essayAssignmentId}}/analytics/student",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "assignments",
                "{{essayAssignmentId}}",
                "analytics",
                "student"
              ]
            },
            "description": "Get student-specific analytics"
          }
        },
        {
          "name": "Bulk Grade Submissions",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/assignments/{{essayAssignmentId}}/bulk/grade",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "assignments",
                "{{essayAssignmentId}}",
                "bulk",
                "grade"
              ]
            },
            "description": "Bulk grade multiple submissions - Guru access only",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"submissions\": [{\"id\": 1, \"grade\": 85}, {\"id\": 2, \"grade\": 92}]\n}"
            }
          }
        }
      ],
      "description": "Student assignment submissions with different content types"
    },
    {
      "name": "\ud83d\udcca Grading & Rubrics",
      "item": [
        {
          "name": "Create Grading Rubric",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();",
                  "if (pm.response.code === 201) {",
                  "    pm.environment.set('rubricId', responseJson.data.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{teacherToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"assignmentId\": {{essayAssignmentId}},\n  \"name\": \"Essay Grading Rubric\",\n  \"totalPoints\": 100,\n  \"criteria\": [\n    {\n      \"name\": \"Content Quality\",\n      \"description\": \"Accuracy and depth of content\",\n      \"maxPoints\": 40,\n      \"levels\": [\n        {\n          \"name\": \"Excellent\",\n          \"description\": \"Comprehensive, accurate, and insightful\",\n          \"points\": 40\n        },\n        {\n          \"name\": \"Good\",\n          \"description\": \"Good understanding with minor gaps\",\n          \"points\": 32\n        },\n        {\n          \"name\": \"Satisfactory\",\n          \"description\": \"Basic understanding, some inaccuracies\",\n          \"points\": 24\n        },\n        {\n          \"name\": \"Needs Improvement\",\n          \"description\": \"Limited understanding, major gaps\",\n          \"points\": 16\n        }\n      ]\n    },\n    {\n      \"name\": \"Writing Quality\",\n      \"description\": \"Grammar, style, and organization\",\n      \"maxPoints\": 30,\n      \"levels\": [\n        {\n          \"name\": \"Excellent\",\n          \"description\": \"Clear, well-organized, error-free\",\n          \"points\": 30\n        },\n        {\n          \"name\": \"Good\",\n          \"description\": \"Generally clear with minor errors\",\n          \"points\": 24\n        },\n        {\n          \"name\": \"Satisfactory\",\n          \"description\": \"Adequate with some confusion\",\n          \"points\": 18\n        },\n        {\n          \"name\": \"Needs Improvement\",\n          \"description\": \"Unclear, many errors\",\n          \"points\": 12\n        }\n      ]\n    },\n    {\n      \"name\": \"Citations and Sources\",\n      \"description\": \"Proper use of citations and references\",\n      \"maxPoints\": 30,\n      \"levels\": [\n        {\n          \"name\": \"Excellent\",\n          \"description\": \"Proper citations, credible sources\",\n          \"points\": 30\n        },\n        {\n          \"name\": \"Good\",\n          \"description\": \"Good citations with minor issues\",\n          \"points\": 24\n        },\n        {\n          \"name\": \"Satisfactory\",\n          \"description\": \"Basic citations, some issues\",\n          \"points\": 18\n        },\n        {\n          \"name\": \"Needs Improvement\",\n          \"description\": \"Poor or missing citations\",\n          \"points\": 12\n        }\n      ]\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/rubrics",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "rubrics"
              ]
            },
            "description": "Create detailed grading rubric for assignments"
          }
        },
        {
          "name": "Grade Submission with Rubric",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{teacherToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"rubricId\": {{rubricId}},\n  \"criteriaScores\": {\n    \"1\": 36,\n    \"2\": 28,\n    \"3\": 26\n  },\n  \"totalScore\": 90,\n  \"feedback\": \"<p>Excellent work overall! Your analysis of calculus applications was thorough and well-researched.</p><p><strong>Strengths:</strong> Clear explanations, good examples, proper mathematical notation.</p><p><strong>Areas for improvement:</strong> Could expand on the economic applications section.</p>\",\n  \"privateNotes\": \"Student shows strong understanding of concepts. Consider for advanced placement.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/submissions/{{essaySubmissionId}}/grade",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "submissions",
                "{{essaySubmissionId}}",
                "grade"
              ]
            },
            "description": "Grade submission using rubric with detailed feedback"
          }
        },
        {
          "name": "Auto-Grade Quiz",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{teacherToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/submissions/{{quizSubmissionId}}/auto-grade",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "submissions",
                "{{quizSubmissionId}}",
                "auto-grade"
              ]
            },
            "description": "Automatically grade quiz submission based on correct answers"
          }
        },
        {
          "name": "Bulk Grade Submissions",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{teacherToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"submissions\": [\n    {\n      \"submissionId\": 1,\n      \"score\": 85,\n      \"feedback\": \"Good work!\"\n    },\n    {\n      \"submissionId\": 2,\n      \"score\": 92,\n      \"feedback\": \"Excellent!\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/assignments/{{quizAssignmentId}}/bulk-grade",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "assignments",
                "{{quizAssignmentId}}",
                "bulk-grade"
              ]
            },
            "description": "Grade multiple submissions at once"
          }
        },
        {
          "name": "Export Grades to Excel",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{teacherToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/courses/{{courseId}}/grades/export?format=excel",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "courses",
                "{{courseId}}",
                "grades",
                "export"
              ],
              "query": [
                {
                  "key": "format",
                  "value": "excel"
                }
              ]
            },
            "description": "Export course grades to Excel format"
          }
        },
        {
          "name": "Generate Grade Report PDF",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{teacherToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/assignments/{{essayAssignmentId}}/grade-report?format=pdf",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "assignments",
                "{{essayAssignmentId}}",
                "grade-report"
              ],
              "query": [
                {
                  "key": "format",
                  "value": "pdf"
                }
              ]
            },
            "description": "Generate PDF grade report for assignment"
          }
        }
      ],
      "description": "Grading system with rubrics, feedback, and export capabilities"
    },
    {
      "name": "\ud83d\udc65 Enrollment Management",
      "item": [
        {
          "name": "Enroll Student in Course",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{teacherToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"studentId\": {{studentId}},\n  \"enrollmentMethod\": \"manual\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/courses/{{courseId}}/enrollments",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "courses",
                "{{courseId}}",
                "enrollments"
              ]
            },
            "description": "Manually enroll student in course"
          }
        },
        {
          "name": "Student Self-Enrollment with Code",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{studentToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"enrollmentCode\": \"{{enrollmentCode}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/enrollments/join",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "enrollments",
                "join"
              ]
            },
            "description": "Student enrolls using class code"
          }
        },
        {
          "name": "Bulk Enroll Students",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{teacherToken}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "csvFile",
                  "type": "file",
                  "src": []
                },
                {
                  "key": "skipDuplicates",
                  "value": "true",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/courses/{{courseId}}/enrollments/bulk",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "courses",
                "{{courseId}}",
                "enrollments",
                "bulk"
              ]
            },
            "description": "Bulk enroll students via CSV upload"
          }
        },
        {
          "name": "List Course Enrollments",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{teacherToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/courses/{{courseId}}/enrollments?status=active&page=1&limit=20",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "courses",
                "{{courseId}}",
                "enrollments"
              ],
              "query": [
                {
                  "key": "status",
                  "value": "active"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            },
            "description": "List all enrollments for a course"
          }
        },
        {
          "name": "Update Enrollment Status",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{teacherToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"inactive\",\n  \"reason\": \"Student requested withdrawal\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/enrollments/{{enrollmentId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "enrollments",
                "{{enrollmentId}}"
              ]
            },
            "description": "Update enrollment status"
          }
        }
      ],
      "description": "Student enrollment management and class codes"
    },
    {
      "name": "\ud83d\udd0d Search & Discovery",
      "item": [
        {
          "name": "Global Search",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/search?q=calculus&types=course,material,assignment&limit=20",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "search"
              ],
              "query": [
                {
                  "key": "q",
                  "value": "calculus"
                },
                {
                  "key": "types",
                  "value": "course,material,assignment"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            },
            "description": "Search across courses, materials, and assignments"
          }
        },
        {
          "name": "Search with Filters",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/search?q=mathematics&types=course&teacherId={{teacherId}}&privacy=public",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "search"
              ],
              "query": [
                {
                  "key": "q",
                  "value": "mathematics"
                },
                {
                  "key": "types",
                  "value": "course"
                },
                {
                  "key": "teacherId",
                  "value": "{{teacherId}}"
                },
                {
                  "key": "privacy",
                  "value": "public"
                }
              ]
            },
            "description": "Search with advanced filters"
          }
        },
        {
          "name": "Search Suggestions",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/search/suggestions?q=calc&limit=5",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "search",
                "suggestions"
              ],
              "query": [
                {
                  "key": "q",
                  "value": "calc"
                },
                {
                  "key": "limit",
                  "value": "5"
                }
              ]
            },
            "description": "Get search suggestions for autocomplete"
          }
        },
        {
          "name": "Advanced Search",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"calculus\",\n  \"filters\": {\n    \"contentTypes\": [\"course\", \"material\"],\n    \"dateRange\": {\n      \"from\": \"2025-01-01\",\n      \"to\": \"2025-12-31\"\n    },\n    \"difficulty\": \"intermediate\",\n    \"tags\": [\"mathematics\", \"calculus\"]\n  },\n  \"sortBy\": \"relevance\",\n  \"page\": 1,\n  \"limit\": 20\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/search/advanced",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "search",
                "advanced"
              ]
            },
            "description": "Advanced search with complex filters"
          }
        },
        {
          "name": "Get Popular Search Terms",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/search/popular",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "search",
                "popular"
              ]
            },
            "description": "Get popular search terms"
          }
        },
        {
          "name": "Get Search Analytics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/search/analytics",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "search",
                "analytics"
              ]
            },
            "description": "Get search analytics - Admin/Guru access only"
          }
        },
        {
          "name": "Get Search History",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/search/history",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "search",
                "history"
              ]
            },
            "description": "Get user's search history"
          }
        },
        {
          "name": "Clear Search History",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/search/history",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "search",
                "history"
              ]
            },
            "description": "Clear user's search history"
          }
        },
        {
          "name": "Search within Course",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/search/course/{{courseId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "search",
                "course",
                "{{courseId}}"
              ]
            },
            "description": "Search within specific course"
          }
        },
        {
          "name": "Save Search",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/search/saved",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "search",
                "saved"
              ]
            },
            "description": "Save search for later use",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"machine learning\",\n  \"filters\": {\n    \"type\": \"assignment\",\n    \"courseId\": \"{{courseId}}\"\n  },\n  \"name\": \"ML Assignments\"\n}"
            }
          }
        },
        {
          "name": "Get Saved Searches",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/search/saved",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "search",
                "saved"
              ]
            },
            "description": "Get user's saved searches"
          }
        },
        {
          "name": "Update Saved Search",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/search/saved/{{searchId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "search",
                "saved",
                "{{searchId}}"
              ]
            },
            "description": "Update saved search",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Search Name\"\n}"
            }
          }
        },
        {
          "name": "Delete Saved Search",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/search/saved/{{searchId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "search",
                "saved",
                "{{searchId}}"
              ]
            },
            "description": "Delete saved search"
          }
        },
        {
          "name": "Track Search Analytics",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/search/analytics",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "search",
                "analytics"
              ]
            },
            "description": "Track search analytics",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"linear algebra\",\n  \"resultsCount\": 15,\n  \"selectedResult\": \"assignment_123\"\n}"
            }
          }
        }
      ],
      "description": "Full-text search across platform content"
    },
    {
      "name": "\ud83d\udcc8 Analytics & Reports",
      "item": [
        {
          "name": "Dashboard Analytics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/analytics/dashboard",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "analytics",
                "dashboard"
              ]
            },
            "description": "Get role-specific dashboard analytics"
          }
        },
        {
          "name": "Course Analytics (Teacher)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{teacherToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/analytics/courses/{{courseId}}?period=30d",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "analytics",
                "courses",
                "{{courseId}}"
              ],
              "query": [
                {
                  "key": "period",
                  "value": "30d"
                }
              ]
            },
            "description": "Get detailed course analytics for teachers"
          }
        },
        {
          "name": "Student Progress Analytics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{studentToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/analytics/students/{{studentId}}/progress?courseId={{courseId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "analytics",
                "students",
                "{{studentId}}",
                "progress"
              ],
              "query": [
                {
                  "key": "courseId",
                  "value": "{{courseId}}"
                }
              ]
            },
            "description": "Get student progress analytics"
          }
        },
        {
          "name": "Assignment Performance Analytics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{teacherToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/analytics/assignments/{{quizAssignmentId}}/performance",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "analytics",
                "assignments",
                "{{quizAssignmentId}}",
                "performance"
              ]
            },
            "description": "Get assignment performance statistics"
          }
        },
        {
          "name": "System Analytics (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/analytics/system?period=7d",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "analytics",
                "system"
              ],
              "query": [
                {
                  "key": "period",
                  "value": "7d"
                }
              ]
            },
            "description": "Get system-wide analytics (Admin only)"
          }
        },
        {
          "name": "Export Analytics Report",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{teacherToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/analytics/courses/{{courseId}}/export?format=pdf&period=30d",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "analytics",
                "courses",
                "{{courseId}}",
                "export"
              ],
              "query": [
                {
                  "key": "format",
                  "value": "pdf"
                },
                {
                  "key": "period",
                  "value": "30d"
                }
              ]
            },
            "description": "Export analytics report in PDF/Excel format"
          }
        },
        {
          "name": "Get Student Learning Insights",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/analytics/students/{{studentId}}/insights",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "analytics",
                "students",
                "{{studentId}}",
                "insights"
              ]
            },
            "description": "Get student learning insights and recommendations - Guru/Admin access only"
          }
        },
        {
          "name": "Get System Usage Analytics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/analytics/system/usage",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "analytics",
                "system",
                "usage"
              ]
            },
            "description": "Get system-wide usage analytics - Admin access only"
          }
        },
        {
          "name": "Get User Performance Summary",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/analytics/users/{{userId}}/performance",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "analytics",
                "users",
                "{{userId}}",
                "performance"
              ]
            },
            "description": "Get user performance summary - Guru/Admin access only"
          }
        },
        {
          "name": "Get Grade Distribution",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/analytics/grades/distribution",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "analytics",
                "grades",
                "distribution"
              ]
            },
            "description": "Get grade distribution analytics - Guru/Admin access only"
          }
        },
        {
          "name": "Get Activity Timeline",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/analytics/activity/timeline",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "analytics",
                "activity",
                "timeline"
              ]
            },
            "description": "Get activity timeline analytics - Guru/Admin access only"
          }
        },
        {
          "name": "Get Performance Metrics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/analytics/performance",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "analytics",
                "performance"
              ]
            },
            "description": "Get system performance metrics - Admin access only"
          }
        },
        {
          "name": "Generate Custom Reports",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/analytics/reports",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "analytics",
                "reports"
              ]
            },
            "description": "Generate custom analytics reports - Guru/Admin access only"
          }
        },
        {
          "name": "Export Analytics Data",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/analytics/export",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "analytics",
                "export"
              ]
            },
            "description": "Export analytics data - Guru/Admin access only",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"format\": \"csv\",\n  \"dateRange\": {\"start\": \"2024-01-01\", \"end\": \"2024-02-01\"},\n  \"metrics\": [\"grades\", \"submissions\", \"activity\"]\n}"
            }
          }
        },
        {
          "name": "Get Teacher Summary",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/analytics/teacher/summary",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "analytics",
                "teacher",
                "summary"
              ]
            },
            "description": "Get teacher-specific analytics summary - Guru access only"
          }
        },
        {
          "name": "Get Student Progress",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/analytics/student/progress",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "analytics",
                "student",
                "progress"
              ]
            },
            "description": "Get comprehensive student progress analytics"
          }
        },
        {
          "name": "Get Admin Overview",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/analytics/admin/overview",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "analytics",
                "admin",
                "overview"
              ]
            },
            "description": "Get admin dashboard overview - Admin access only"
          }
        }
      ],
      "description": "Analytics, statistics, and reporting endpoints"
    },
    {
      "name": "\ud83d\udd12 Security & Admin",
      "item": [
        {
          "name": "Check Account Status",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/account-status",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "account-status"
              ]
            },
            "description": "Check if account is locked or has security issues"
          }
        },
        {
          "name": "Unlock User Account (Admin)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": {{userId}},\n  \"reason\": \"Account unlock requested by user\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/admin/unlock-account",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "admin",
                "unlock-account"
              ]
            },
            "description": "Unlock locked user account (Admin only)"
          }
        },
        {
          "name": "Get Security Logs (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/security-logs?page=1&limit=50&level=warning",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "admin",
                "security-logs"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "50"
                },
                {
                  "key": "level",
                  "value": "warning"
                }
              ]
            },
            "description": "Get system security logs (Admin only)"
          }
        },
        {
          "name": "System Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/health",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "health"
              ]
            },
            "description": "Check system health and status"
          }
        },
        {
          "name": "API Version Info",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/version",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "version"
              ]
            },
            "description": "Get API version and build information"
          }
        }
      ],
      "description": "Security monitoring and administrative endpoints"
    },
    {
      "name": "\ud83d\udd14 Notification Management",
      "item": [
        {
          "name": "Get Notifications",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/notifications",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "notifications"
              ]
            },
            "description": "Get notifications for current user"
          }
        },
        {
          "name": "Get Notification Stats",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/notifications/stats",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "notifications",
                "stats"
              ]
            },
            "description": "Get notification statistics"
          }
        },
        {
          "name": "Get Notification Preferences",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/notifications/preferences",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "notifications",
                "preferences"
              ]
            },
            "description": "Get user notification preferences"
          }
        },
        {
          "name": "Update Notification Preferences",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/notifications/preferences",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "notifications",
                "preferences"
              ]
            },
            "description": "Update notification preferences",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"emailNotifications\": true,\n  \"pushNotifications\": true,\n  \"assignments\": true,\n  \"grades\": true\n}"
            }
          }
        },
        {
          "name": "Reset Notification Preferences",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/notifications/preferences/reset",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "notifications",
                "preferences",
                "reset"
              ]
            },
            "description": "Reset notification preferences to default"
          }
        },
        {
          "name": "Get WebSocket Stats",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/notifications/ws-stats",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "notifications",
                "ws-stats"
              ]
            },
            "description": "Get WebSocket connection statistics - Admin access only"
          }
        },
        {
          "name": "Cleanup Expired Notifications",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/notifications/cleanup",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "notifications",
                "cleanup"
              ]
            },
            "description": "Clean up expired notifications - Admin access only"
          }
        },
        {
          "name": "Create Notification",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/notifications",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "notifications"
              ]
            },
            "description": "Create a new notification - Admin/Guru access only",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"New Assignment\",\n  \"message\": \"A new assignment has been posted\",\n  \"type\": \"assignment\",\n  \"recipientIds\": [1, 2, 3]\n}"
            }
          }
        },
        {
          "name": "Create from Template",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/notifications/template",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "notifications",
                "template"
              ]
            },
            "description": "Create notification from template",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"templateId\": \"assignment-due\",\n  \"data\": {\n    \"assignmentName\": \"Math Quiz\",\n    \"dueDate\": \"2024-02-15\"\n  }\n}"
            }
          }
        },
        {
          "name": "Send Announcement",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/notifications/announcement",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "notifications",
                "announcement"
              ]
            },
            "description": "Send system-wide announcement - Admin access only",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"System Maintenance\",\n  \"message\": \"The system will be under maintenance tomorrow\",\n  \"priority\": \"high\"\n}"
            }
          }
        },
        {
          "name": "Mark Multiple as Read",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/notifications/read-multiple",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "notifications",
                "read-multiple"
              ]
            },
            "description": "Mark multiple notifications as read",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"notificationIds\": [1, 2, 3, 4]\n}"
            }
          }
        },
        {
          "name": "Mark All as Read",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/notifications/read-all",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "notifications",
                "read-all"
              ]
            },
            "description": "Mark all notifications as read"
          }
        },
        {
          "name": "Get Notification by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/notifications/{{notificationId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "notifications",
                "{{notificationId}}"
              ]
            },
            "description": "Get specific notification by ID"
          }
        },
        {
          "name": "Mark as Read",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/notifications/{{notificationId}}/read",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "notifications",
                "{{notificationId}}",
                "read"
              ]
            },
            "description": "Mark notification as read"
          }
        },
        {
          "name": "Archive Notification",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/notifications/{{notificationId}}/archive",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "notifications",
                "{{notificationId}}",
                "archive"
              ]
            },
            "description": "Archive notification"
          }
        },
        {
          "name": "Delete Notification",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/notifications/{{notificationId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "notifications",
                "{{notificationId}}"
              ]
            },
            "description": "Delete notification"
          }
        }
      ]
    },
    {
      "name": "\ud83d\udccb Assignment Templates",
      "item": [
        {
          "name": "Create Assignment Template",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/assignment-templates",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "assignment-templates"
              ]
            },
            "description": "Create a new assignment template - Guru/Admin access only",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Essay Template\",\n  \"description\": \"Standard essay assignment template\",\n  \"type\": \"essay\",\n  \"settings\": {\n    \"wordLimit\": 1000,\n    \"allowLateSubmission\": false\n  }\n}"
            }
          }
        },
        {
          "name": "Get Assignment Templates",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/assignment-templates",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "assignment-templates"
              ]
            },
            "description": "Get all assignment templates - Guru/Admin access only"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();",
                  "if (pm.response.code === 200 && responseJson.data && responseJson.data.length > 0) {",
                  "    pm.environment.set('assignmentTemplateId', responseJson.data[0].id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Assignment Template",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/assignment-templates/{{assignmentTemplateId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "assignment-templates",
                "{{assignmentTemplateId}}"
              ]
            },
            "description": "Get specific assignment template - Guru/Admin access only"
          }
        },
        {
          "name": "Update Assignment Template",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/assignment-templates/{{assignmentTemplateId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "assignment-templates",
                "{{assignmentTemplateId}}"
              ]
            },
            "description": "Update assignment template - Guru/Admin access only",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Template\",\n  \"description\": \"Updated description\"\n}"
            }
          }
        },
        {
          "name": "Delete Assignment Template",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/assignment-templates/{{assignmentTemplateId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "assignment-templates",
                "{{assignmentTemplateId}}"
              ]
            },
            "description": "Delete assignment template - Guru/Admin access only"
          }
        },
        {
          "name": "Create Assignment from Template",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/assignment-templates/{{assignmentTemplateId}}/assignments",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "assignment-templates",
                "{{assignmentTemplateId}}",
                "assignments"
              ]
            },
            "description": "Create assignment from template - Guru/Admin access only",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"courseId\": \"{{courseId}}\",\n  \"title\": \"Assignment from Template\",\n  \"dueDate\": \"2024-02-20T23:59:59Z\"\n}"
            }
          }
        },
        {
          "name": "Bulk Delete Templates",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/assignment-templates/bulk/delete",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "assignment-templates",
                "bulk",
                "delete"
              ]
            },
            "description": "Bulk delete assignment templates - Guru/Admin access only",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"templateIds\": [1, 2, 3]\n}"
            }
          }
        }
      ]
    },
    {
      "name": "\ud83d\udcca User Statistics & Gamification",
      "item": [
        {
          "name": "Get User Statistics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}/statistics",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "users",
                "{{userId}}",
                "statistics"
              ]
            },
            "description": "Get comprehensive user statistics"
          }
        },
        {
          "name": "Update User Statistics",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}/statistics",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "users",
                "{{userId}}",
                "statistics"
              ]
            },
            "description": "Update user statistics",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"totalTimeSpent\": 3600,\n  \"assignmentsCompleted\": 5,\n  \"averageGrade\": 85.5\n}"
            }
          }
        },
        {
          "name": "Refresh User Statistics",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}/statistics/refresh",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "users",
                "{{userId}}",
                "statistics",
                "refresh"
              ]
            },
            "description": "Refresh and recalculate user statistics"
          }
        },
        {
          "name": "Get User Course Progress",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}/courses/{{courseId}}/progress",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "users",
                "{{userId}}",
                "courses",
                "{{courseId}}",
                "progress"
              ]
            },
            "description": "Get user progress in specific course"
          }
        },
        {
          "name": "Get User Learning Streak",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}/streak",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "users",
                "{{userId}}",
                "streak"
              ]
            },
            "description": "Get user's learning streak information"
          }
        },
        {
          "name": "Get User Achievements",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}/achievements",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "users",
                "{{userId}}",
                "achievements"
              ]
            },
            "description": "Get user's achievements and badges"
          }
        },
        {
          "name": "Log User Activity",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}/activity",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "users",
                "{{userId}}",
                "activity"
              ]
            },
            "description": "Log user activity",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"action\": \"assignment_submitted\",\n  \"resourceType\": \"assignment\",\n  \"resourceId\": \"{{essayAssignmentId}}\",\n  \"timeSpent\": 1800\n}"
            }
          }
        },
        {
          "name": "Get User Activity History",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}/activity",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "users",
                "{{userId}}",
                "activity"
              ]
            },
            "description": "Get user activity history"
          }
        },
        {
          "name": "Get User Leaderboard Position",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}/leaderboard/{{metric}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "users",
                "{{userId}}",
                "leaderboard",
                "{{metric}}"
              ]
            },
            "description": "Get user position on leaderboard"
          }
        },
        {
          "name": "Get System Statistics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/statistics/system",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "statistics",
                "system"
              ]
            },
            "description": "Get system-wide statistics - Admin access only"
          }
        },
        {
          "name": "Get Leaderboard",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/statistics/leaderboard/{{metric}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "statistics",
                "leaderboard",
                "{{metric}}"
              ]
            },
            "description": "Get leaderboard for specific metric - Admin/Guru access only"
          }
        }
      ]
    },
    {
      "name": "\ud83c\udfe5 System Health & Version",
      "item": [
        {
          "name": "Get API Version",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/api-version",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "api-version"
              ]
            },
            "description": "Get current API version information"
          }
        },
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/health",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "health"
              ]
            },
            "description": "Check system health and status"
          }
        }
      ]
    },
    {
      "name": "\ud83d\udce6 Assignment Bulk Operations",
      "item": [
        {
          "name": "Bulk Create Assignments",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/assignments/bulk/create",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "assignments",
                "bulk",
                "create"
              ]
            },
            "description": "Create multiple assignments at once - Guru/Admin access only",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"assignments\": [\n    {\"title\": \"Quiz 1\", \"type\": \"quiz\", \"courseId\": \"{{courseId}}\"},\n    {\"title\": \"Essay 1\", \"type\": \"essay\", \"courseId\": \"{{courseId}}\"}\n  ]\n}"
            }
          }
        },
        {
          "name": "Bulk Update Assignments",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/assignments/bulk/update",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "assignments",
                "bulk",
                "update"
              ]
            },
            "description": "Update multiple assignments - Guru/Admin access only",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"updates\": [\n    {\"id\": 1, \"dueDate\": \"2024-03-01T23:59:59Z\"},\n    {\"id\": 2, \"points\": 100}\n  ]\n}"
            }
          }
        },
        {
          "name": "Bulk Delete Assignments",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/assignments/bulk/delete",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "assignments",
                "bulk",
                "delete"
              ]
            },
            "description": "Delete multiple assignments - Guru/Admin access only",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"assignmentIds\": [1, 2, 3]\n}"
            }
          }
        },
        {
          "name": "Bulk Grade Assignments",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/assignments/bulk/grade",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "assignments",
                "bulk",
                "grade"
              ]
            },
            "description": "Grade multiple assignments - Guru access only",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"grades\": [\n    {\"assignmentId\": 1, \"submissionId\": 1, \"grade\": 85},\n    {\"assignmentId\": 2, \"submissionId\": 2, \"grade\": 92}\n  ]\n}"
            }
          }
        },
        {
          "name": "Bulk Update Analytics",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/assignments/bulk/analytics/update",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "assignments",
                "bulk",
                "analytics",
                "update"
              ]
            },
            "description": "Update analytics for multiple assignments - Guru/Admin access only"
          }
        },
        {
          "name": "Export Assignment Data",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/assignments/bulk/export",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "assignments",
                "bulk",
                "export"
              ]
            },
            "description": "Export assignment data - Guru/Admin access only",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"format\": \"xlsx\",\n  \"assignmentIds\": [1, 2, 3],\n  \"includeSubmissions\": true\n}"
            }
          }
        },
        {
          "name": "Import Assignment Data",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/assignments/bulk/import",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "assignments",
                "bulk",
                "import"
              ]
            },
            "description": "Import assignment data from file - Guru/Admin access only",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"fileUrl\": \"https://example.com/assignments.xlsx\",\n  \"courseId\": \"{{courseId}}\"\n}"
            }
          }
        }
      ]
    },
    {
      "name": "\ud83d\udcda Course Content Management",
      "item": [
        {
          "name": "Create Course Content",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/courses/{{courseId}}/contents",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "courses",
                "{{courseId}}",
                "contents"
              ]
            },
            "description": "Create new course content - Guru/Admin access only",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Course Introduction\",\n  \"content\": \"Welcome to this course\",\n  \"contentType\": \"text\",\n  \"order\": 1\n}"
            }
          }
        },
        {
          "name": "Get Course Contents",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/courses/{{courseId}}/contents",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "courses",
                "{{courseId}}",
                "contents"
              ]
            },
            "description": "Get all course contents"
          }
        },
        {
          "name": "Get Course Content",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/courses/{{courseId}}/contents/{{contentId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "courses",
                "{{courseId}}",
                "contents",
                "{{contentId}}"
              ]
            },
            "description": "Get specific course content"
          }
        },
        {
          "name": "Update Course Content",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/courses/{{courseId}}/contents/{{contentId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "courses",
                "{{courseId}}",
                "contents",
                "{{contentId}}"
              ]
            },
            "description": "Update course content - Guru/Admin access only",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated Title\",\n  \"content\": \"Updated content\"\n}"
            }
          }
        },
        {
          "name": "Delete Course Content",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/courses/{{courseId}}/contents/{{contentId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "courses",
                "{{courseId}}",
                "contents",
                "{{contentId}}"
              ]
            },
            "description": "Delete course content - Guru/Admin access only"
          }
        }
      ]
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{authToken}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "teacherToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "studentToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "teacherId",
      "value": "",
      "type": "string"
    },
    {
      "key": "studentId",
      "value": "",
      "type": "string"
    },
    {
      "key": "courseId",
      "value": "",
      "type": "string"
    },
    {
      "key": "materialId",
      "value": "",
      "type": "string"
    },
    {
      "key": "essayAssignmentId",
      "value": "",
      "type": "string"
    },
    {
      "key": "quizAssignmentId",
      "value": "",
      "type": "string"
    },
    {
      "key": "fileAssignmentId",
      "value": "",
      "type": "string"
    },
    {
      "key": "essaySubmissionId",
      "value": "",
      "type": "string"
    },
    {
      "key": "quizSubmissionId",
      "value": "",
      "type": "string"
    },
    {
      "key": "fileSubmissionId",
      "value": "",
      "type": "string"
    },
    {
      "key": "rubricId",
      "value": "",
      "type": "string"
    },
    {
      "key": "enrollmentId",
      "value": "",
      "type": "string"
    },
    {
      "key": "enrollmentCode",
      "value": "",
      "type": "string"
    }
  ]
}